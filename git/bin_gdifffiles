#!/bin/bash
 
function usage(){
	printf "Usage for $0 :\n"
	printf "\t-n nb_log  : Number of commits to treat\n"
	printf "\t-p pattern : Pattern used to grep the commits message (SDK-XXX for example)\n"
	printf "\t-h         : Prints this message\n"
	printf "This script will print out files modified for a certain amount of commit\n"
	printf "Commits must be grepped following a pattern (might be empty)\n"
}
 
log_number=20;
log_pattern="";

if [ $# -eq 0 ]; then
	usage;
	exit 0;
fi

while true ; do
    case "$1" in
        -h) usage;
            exit 0;;
        -n) log_number="$2";
            shift 2;;
		-p) log_pattern="$2"
			shift 2;;
        *) shift; break;;
    esac
done

# echo "log_number  : "$log_number
# echo "log_pattern : "$log_pattern

commits=$(git log --oneline -n$log_number | grep "$log_pattern")

while read -r line;do
	commit_id=$(echo $line | sed -r 's/ .*//');
	echo "Commit : $line"
	git diff-tree --no-commit-id --name-only -r $commit_id
	echo "==========="
done <<<$commits

exit 0